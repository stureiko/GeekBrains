# ************************************************
#
# Author: Стурейко Игорь
# Project: Geekbrains.Algorithms
# Lesson 9 - Деревья, Хеш функции
# Date: 2019-11-29
#
# 1. Определение количества различных подстрок с использованием хеш-функции.
# Пусть на вход функции дана строка. Требуется вернуть количество различных подстрок в этой строке.
#
# Примечания:
# * в сумму не включаем пустую строку и строку целиком;
# * без использования функций для вычисления хэша (hash(), sha1()
# или любой другой из модуля hashlib задача считается не решённой.
#
# ************************************************
import hashlib


if __name__ == '__main__':
    s_1 = input('Введите строку: ')
    # s_1 = 'hello'

# Реализация через массив
    pods = []
    for i in range(1, len(s_1)):    # выделяем размер подстроки

        for j in range(len(s_1)):   # проходим по строке

            sub = s_1[j:j+i]        # и берем из нее подстроки

            if sub not in pods:     # проверяем, может такая уже есть
                pods.append(sub)    # если нет - добавляем в массив подстрок

# реализация через массив хешей
# то же самое, только в массиве храним не сами подстроки, а их хеши
    pod2 = []
    for i in range(1, len(s_1)):

        for j in range(len(s_1)):

            sub = hashlib.sha1(s_1[j:j+i].encode('utf-8')).hexdigest()

            if sub not in pod2:
                pod2.append(sub)

# вывести результаты
    print('Реализация через массив подстрок')
    print(f'В строке {s_1} содержится {len(pods)} уникальных подстрок')

    print('*' * 50)

    print('\nРеализация через массив хешей')
    print(f'В строке {s_1} содержится {len(pod2)} уникальных подстрок')

