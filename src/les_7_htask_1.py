"""
1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100).
Выведите на экран исходный и отсортированный массивы.

Примечания:

a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,

b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.

Решение:
Будем проверять, была ли перестановка на шаге, если нет - то массив уже отсортирован
"""
import random

size = 100
array = [random.randint(-size, size) for i in range(size)]


def sort_bubble(array):
    flag = False
    n = 1
    while n < len(array):
        if not flag:  # если была перестановка - то сортируем
            for i in range(len(array) - n):
                if array[i] > array[i + 1]:
                    array[i], array[i + 1] = array[i + 1], array[i]
                    flag = False
            n += 1
        else:  # если перестановки не было - то выходим уже отсортировано
            break


print(array)  # исходный массив
sort_bubble(array)
print(array)  # отсортированный массив
